{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\safirma\\\\Documents\\\\GitHub\\\\printabilty\\\\frontend\\\\src\\\\File\\\\Pages\\\\UploadFilePage.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUploader() {\n  async function uploadFile() {\n    const selectedFile = document.getElementById(\"file\").files[0];\n    if (!selectedFile) {\n      console.error(\"No file selected\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const response = await fetch(\"https://example.com/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to upload file\");\n      }\n      console.log(\"File uploaded successfully\");\n    } catch (error) {\n      console.error(\"Error uploading file:\", error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"html\", {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charset: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"replit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"style.css\",\n        rel: \"stylesheet\",\n        type: \"text/css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Upload a file to print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"uploadForm\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file\",\n          type: \"file\",\n          name: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: uploadFile,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"script.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FileUploader","uploadFile","selectedFile","document","getElementById","files","console","error","formData","FormData","append","response","fetch","method","body","ok","Error","log","message","children","charset","fileName","_jsxFileName","lineNumber","columnNumber","name","content","href","rel","type","id","encType","onClick","src","_c","$RefreshReg$"],"sources":["C:/Users/safirma/Documents/GitHub/printabilty/frontend/src/File/Pages/UploadFilePage.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction FileUploader() {\r\n  async function uploadFile() {\r\n    const selectedFile = document.getElementById(\"file\").files[0];\r\n    \r\n    if (!selectedFile) {\r\n      console.error(\"No file selected\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    try {\r\n      const response = await fetch(\"https://example.com/upload\", {\r\n        method: \"POST\",\r\n        body: formData\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to upload file\");\r\n      }\r\n      \r\n      console.log(\"File uploaded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <html>\r\n      <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width\" />\r\n        <title>replit</title>\r\n        <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n      </head>\r\n      <body>\r\n        <h1>Upload a file to print</h1>\r\n        <form id=\"uploadForm\" encType=\"multipart/form-data\">\r\n          <input id=\"file\" type=\"file\" name=\"file\" />\r\n          <br /><br />\r\n          <button type=\"button\" onClick={uploadFile}>Upload</button>\r\n        </form>\r\n        <script src=\"script.js\"></script>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n\r\nexport default FileUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}