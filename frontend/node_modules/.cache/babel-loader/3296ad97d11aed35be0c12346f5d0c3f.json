{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CardForm = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _helpers = require(\"../helpers\");\nvar _excluded = [\"onFormComplete\", \"cardStyle\", \"placeholders\", \"defaultValues\"];\nvar _this = this,\n  _jsxFileName = \"/Users/charliecruzan/stripe/stripe-react-native/src/components/CardForm.tsx\";\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar CardFormNative = (0, _reactNative.requireNativeComponent)('CardForm');\nvar CardForm = (0, _react.forwardRef)(function (_ref, ref) {\n  var onFormComplete = _ref.onFormComplete,\n    cardStyle = _ref.cardStyle,\n    placeholders = _ref.placeholders,\n    defaultValues = _ref.defaultValues,\n    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var inputRef = (0, _react.useRef)(null);\n  var onFormCompleteHandler = (0, _react.useCallback)(function (event) {\n    var card = event.nativeEvent;\n    var data = {\n      last4: card.last4,\n      expiryMonth: card.expiryMonth,\n      expiryYear: card.expiryYear,\n      complete: card.complete,\n      brand: card.brand,\n      country: card.country,\n      postalCode: card.postalCode\n    };\n    if (card.hasOwnProperty('number') || card.hasOwnProperty('cvc')) {\n      data.number = card.number || '';\n      data.cvc = card.cvc || '';\n      if (__DEV__ && onFormComplete && card.complete) {\n        console.warn(\"[stripe-react-native] \\u26A0\\uFE0F WARNING: You've enabled `dangerouslyGetFullCardDetails`, meaning full card details are being returned. Only do this if you're certain that you fulfill the necessary PCI compliance requirements. Make sure that you're not mistakenly logging or storing full card details! See the docs for details: https://stripe.com/docs/security/guide#validating-pci-compliance\");\n      }\n    }\n    onFormComplete == null ? void 0 : onFormComplete(data);\n  }, [onFormComplete]);\n  var focus = function focus() {\n    _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(inputRef.current), 'focus', []);\n  };\n  var blur = function blur() {\n    _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(inputRef.current), 'blur', []);\n  };\n  (0, _react.useImperativeHandle)(ref, function () {\n    return {\n      focus: focus,\n      blur: blur\n    };\n  });\n  var onFocusHandler = (0, _react.useCallback)(function (event) {\n    var focusedField = event.nativeEvent.focusedField;\n    if (focusedField) {\n      (0, _helpers.focusInput)(inputRef.current);\n    } else {}\n  }, []);\n  (0, _react.useLayoutEffect)(function () {\n    var inputRefValue = inputRef.current;\n    if (inputRefValue !== null) {\n      (0, _helpers.registerInput)(inputRefValue);\n      return function () {\n        (0, _helpers.unregisterInput)(inputRefValue);\n        if ((0, _helpers.currentlyFocusedInput)() === inputRefValue) {\n          inputRefValue.blur();\n        }\n      };\n    }\n    return function () {};\n  }, [inputRef]);\n  return _react.default.createElement(CardFormNative, (0, _extends2.default)({\n    ref: inputRef,\n    onFormComplete: onFormCompleteHandler,\n    cardStyle: {\n      backgroundColor: cardStyle == null ? void 0 : cardStyle.backgroundColor,\n      borderColor: cardStyle == null ? void 0 : cardStyle.borderColor,\n      borderWidth: cardStyle == null ? void 0 : cardStyle.borderWidth,\n      borderRadius: cardStyle == null ? void 0 : cardStyle.borderRadius,\n      cursorColor: cardStyle == null ? void 0 : cardStyle.cursorColor,\n      fontSize: cardStyle == null ? void 0 : cardStyle.fontSize,\n      placeholderColor: cardStyle == null ? void 0 : cardStyle.placeholderColor,\n      textColor: cardStyle == null ? void 0 : cardStyle.textColor,\n      textErrorColor: cardStyle == null ? void 0 : cardStyle.textErrorColor,\n      fontFamily: cardStyle == null ? void 0 : cardStyle.fontFamily\n    },\n    placeholders: {\n      number: placeholders == null ? void 0 : placeholders.number,\n      expiration: placeholders == null ? void 0 : placeholders.expiration,\n      cvc: placeholders == null ? void 0 : placeholders.cvc,\n      postalCode: placeholders == null ? void 0 : placeholders.postalCode\n    },\n    defaultValues: Object.assign({}, defaultValues != null ? defaultValues : {}),\n    onFocusChange: onFocusHandler\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }));\n});\nexports.CardForm = CardForm;","map":null,"metadata":{},"sourceType":"script"}