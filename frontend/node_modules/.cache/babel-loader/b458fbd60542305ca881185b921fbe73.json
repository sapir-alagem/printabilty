{"ast":null,"code":"import { useCreatePaymentIntentMutation } from \"./components/apiStripePayment\";\nconst paymentApprove = () => {\n  const [createPaymentIntent] = useCreatePaymentIntentMutation();\n  const onCheckout = async () => {\n    // 1. Create a payment intent\n    const response = await createPaymentIntent();\n    console.log(response);\n    if (response.error) {\n      Alert.alert('Something went wrong', response.error);\n      return;\n    }\n\n    // 2. Initialize the Payment sheet\n    const {\n      error: paymentSheetError\n    } = await initPaymentSheet({\n      merchantDisplayName: 'PrintAbility',\n      paymentIntentClientSecret: response.data.paymentIntent\n    });\n    if (paymentSheetError) {\n      Alert.alert('Something went wrong', paymentSheetError.message);\n      return;\n    }\n    // 3. Present the Payment Sheet from Stripe\n    const {\n      error: paymentError\n    } = await presentPaymentSheet();\n    if (paymentError) {\n      Alert.alert(`Error code: ${paymentError.code}`, paymentError.message);\n      return;\n    }\n    // 4. If payment ok -> create the order\n    onCreateOrder();\n  };\n  function generateHTMLWithCheckoutButton() {\n    return `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>Checkout Page</title>\n        </head>\n        <body>\n            <button id=\"checkoutButton\">Checkout</button>\n    \n            <script src=\"https://unpkg.com/@popperjs/core@2\"></script>\n            <script src=\"https://unpkg.com/tippy.js@6\"></script>\n            <script src=\"https://js.stripe.com/v3/\"></script>\n            <script>\n                // Your JavaScript logic here\n                // Add your import statements and checkout function\n    \n                // Example import statement\n                // import { useCreatePaymentIntentMutation } from \"../components/apiStripePayment\";\n    \n                // Example checkout function\n                // const [createPaymentIntent] = useCreatePaymentIntentMutation();\n                // const onCheckout = async () => {\n                //     // Your checkout logic here\n                // };\n    \n                // Add event listener to the checkout button\n                document.getElementById(\"checkoutButton\").addEventListener(\"click\", onCheckout);\n            </script>\n        </body>\n        </html>\n      `;\n  }\n\n  // Usage:\n  // To insert this HTML content into the DOM, you can use:\n  document.body.innerHTML = generateHTMLWithCheckoutButton();\n};\nexport default paymentApprove;","map":{"version":3,"names":["useCreatePaymentIntentMutation","paymentApprove","createPaymentIntent","onCheckout","response","console","log","error","Alert","alert","paymentSheetError","initPaymentSheet","merchantDisplayName","paymentIntentClientSecret","data","paymentIntent","message","paymentError","presentPaymentSheet","code","onCreateOrder","generateHTMLWithCheckoutButton","document","body","innerHTML"],"sources":["C:/Users/safirma/Documents/GitHub/printabilty/frontend/src/Payments/pages/paymentApprove.js"],"sourcesContent":["import { useCreatePaymentIntentMutation } from \"./components/apiStripePayment\";\r\n\r\nconst paymentApprove = () => {\r\n  const [createPaymentIntent] = useCreatePaymentIntentMutation();\r\n\r\n  const onCheckout = async () => {\r\n      // 1. Create a payment intent\r\n      const response = await createPaymentIntent();\r\n        console.log(response);\r\n    if (response.error) {\r\n        Alert.alert('Something went wrong', response.error);\r\n        return;\r\n      }\r\n\r\n      // 2. Initialize the Payment sheet\r\n      const { error: paymentSheetError } = await initPaymentSheet({\r\n              merchantDisplayName: 'PrintAbility',\r\n              paymentIntentClientSecret: response.data.paymentIntent,\r\n            });\r\n            if (paymentSheetError) {\r\n              Alert.alert('Something went wrong', paymentSheetError.message);\r\n              return;\r\n            }\r\n      // 3. Present the Payment Sheet from Stripe\r\n      const { error: paymentError } = await presentPaymentSheet();\r\n      if (paymentError) {\r\n      Alert.alert(`Error code: ${paymentError.code}`, paymentError.message);\r\n      return;\r\n    }\r\n      // 4. If payment ok -> create the order\r\n      onCreateOrder();\r\n    };\r\n\r\n    function generateHTMLWithCheckoutButton() {\r\n      return `\r\n        <!DOCTYPE html>\r\n        <html lang=\"en\">\r\n        <head>\r\n            <meta charset=\"UTF-8\">\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n            <title>Checkout Page</title>\r\n        </head>\r\n        <body>\r\n            <button id=\"checkoutButton\">Checkout</button>\r\n    \r\n            <script src=\"https://unpkg.com/@popperjs/core@2\"></script>\r\n            <script src=\"https://unpkg.com/tippy.js@6\"></script>\r\n            <script src=\"https://js.stripe.com/v3/\"></script>\r\n            <script>\r\n                // Your JavaScript logic here\r\n                // Add your import statements and checkout function\r\n    \r\n                // Example import statement\r\n                // import { useCreatePaymentIntentMutation } from \"../components/apiStripePayment\";\r\n    \r\n                // Example checkout function\r\n                // const [createPaymentIntent] = useCreatePaymentIntentMutation();\r\n                // const onCheckout = async () => {\r\n                //     // Your checkout logic here\r\n                // };\r\n    \r\n                // Add event listener to the checkout button\r\n                document.getElementById(\"checkoutButton\").addEventListener(\"click\", onCheckout);\r\n            </script>\r\n        </body>\r\n        </html>\r\n      `;\r\n    }\r\n    \r\n    // Usage:\r\n    // To insert this HTML content into the DOM, you can use:\r\n  document.body.innerHTML = generateHTMLWithCheckoutButton();\r\n}\r\nexport default paymentApprove;"],"mappings":"AAAA,SAASA,8BAA8B,QAAQ,+BAA+B;AAE9E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAM,CAACC,mBAAmB,CAAC,GAAGF,8BAA8B,CAAC,CAAC;EAE9D,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B;IACA,MAAMC,QAAQ,GAAG,MAAMF,mBAAmB,CAAC,CAAC;IAC1CG,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACzB,IAAIA,QAAQ,CAACG,KAAK,EAAE;MAChBC,KAAK,CAACC,KAAK,CAAC,sBAAsB,EAAEL,QAAQ,CAACG,KAAK,CAAC;MACnD;IACF;;IAEA;IACA,MAAM;MAAEA,KAAK,EAAEG;IAAkB,CAAC,GAAG,MAAMC,gBAAgB,CAAC;MACpDC,mBAAmB,EAAE,cAAc;MACnCC,yBAAyB,EAAET,QAAQ,CAACU,IAAI,CAACC;IAC3C,CAAC,CAAC;IACF,IAAIL,iBAAiB,EAAE;MACrBF,KAAK,CAACC,KAAK,CAAC,sBAAsB,EAAEC,iBAAiB,CAACM,OAAO,CAAC;MAC9D;IACF;IACN;IACA,MAAM;MAAET,KAAK,EAAEU;IAAa,CAAC,GAAG,MAAMC,mBAAmB,CAAC,CAAC;IAC3D,IAAID,YAAY,EAAE;MAClBT,KAAK,CAACC,KAAK,CAAE,eAAcQ,YAAY,CAACE,IAAK,EAAC,EAAEF,YAAY,CAACD,OAAO,CAAC;MACrE;IACF;IACE;IACAI,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,SAASC,8BAA8BA,CAAA,EAAG;IACxC,OAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;EACH;;EAEA;EACA;EACFC,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGH,8BAA8B,CAAC,CAAC;AAC5D,CAAC;AACD,eAAepB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}