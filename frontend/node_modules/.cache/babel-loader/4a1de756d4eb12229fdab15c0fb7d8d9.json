{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\safirma\\\\Documents\\\\GitHub\\\\printabilty\\\\frontend\\\\src\\\\File\\\\Pages\\\\UploadFilePage.js\";\nimport React from 'react';\nfunction FileUploader() {\n  async function uploadFile() {\n    const selectedFile = document.getElementById(\"file\").files[0];\n    if (!selectedFile) {\n      console.error(\"No file selected\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    const requestOptions = {\n      method: \"POST\",\n      body: formData,\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:5000/uploads\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => alert(error.message));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Upload a file to print\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"uploadForm\",\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"file\",\n    type: \"file\",\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: uploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"script\", {\n    src: \"script.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n}\nexport default FileUploader;","map":{"version":3,"names":["React","FileUploader","uploadFile","selectedFile","document","getElementById","files","console","error","formData","FormData","append","requestOptions","method","body","redirect","fetch","then","response","text","result","log","catch","alert","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","encType","type","name","onClick","src"],"sources":["C:/Users/safirma/Documents/GitHub/printabilty/frontend/src/File/Pages/UploadFilePage.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction FileUploader() {\r\n  async function uploadFile() {\r\n    const selectedFile = document.getElementById(\"file\").files[0];\r\n    \r\n    if (!selectedFile) {\r\n      console.error(\"No file selected\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: formData,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"http://localhost:5000/uploads\", requestOptions)\r\n  .then((response) => response.text())\r\n  .then((result) => console.log(result))\r\n  .catch((error) => alert(error.message));\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <h1>Upload a file to print</h1>\r\n        <form id=\"uploadForm\" encType=\"multipart/form-data\">\r\n          <input id=\"file\" type=\"file\" name=\"file\" />\r\n          <br /><br />\r\n          <button type=\"button\" onClick={uploadFile}>Upload</button>\r\n        </form>\r\n        <script src=\"script.js\"></script>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default FileUploader;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,YAAYA,CAAA,EAAG;EACtB,eAAeC,UAAUA,CAAA,EAAG;IAC1B,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;IAE7D,IAAI,CAACH,YAAY,EAAE;MACjBI,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAER,YAAY,CAAC;IAErC,MAAMS,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL,QAAQ;MACdM,QAAQ,EAAE;IACZ,CAAC;IAEDC,KAAK,CAAC,+BAA+B,EAAEJ,cAAc,CAAC,CACvDK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAKb,OAAO,CAACc,GAAG,CAACD,MAAM,CAAC,CAAC,CACrCE,KAAK,CAAEd,KAAK,IAAKe,KAAK,CAACf,KAAK,CAACgB,OAAO,CAAC,CAAC;EACvC;EAEA,oBACIxB,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/B,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,wBAA0B,CAAC,eAC/B/B,KAAA,CAAAyB,aAAA;IAAMO,EAAE,EAAC,YAAY;IAACC,OAAO,EAAC,qBAAqB;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjD/B,KAAA,CAAAyB,aAAA;IAAOO,EAAE,EAAC,MAAM;IAACE,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC3C/B,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eAAA/B,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eACZ/B,KAAA,CAAAyB,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAACE,OAAO,EAAElC,UAAW;IAAAwB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAc,CACrD,CAAC,eACP/B,KAAA,CAAAyB,aAAA;IAAQY,GAAG,EAAC,WAAW;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAS,CAC7B,CAAC;AAEZ;AAEA,eAAe9B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}