{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidationState = void 0;\nvar ValidationState;\nexports.ValidationState = ValidationState;\n(function (ValidationState) {\n  ValidationState[\"Valid\"] = \"Valid\";\n  ValidationState[\"Invalid\"] = \"Invalid\";\n  ValidationState[\"Incomplete\"] = \"Incomplete\";\n  ValidationState[\"Unknown\"] = \"Unknown\";\n})(ValidationState || (exports.ValidationState = ValidationState = {}));","map":{"version":3,"names":["ValidationState","exports"],"sources":["C:\\Users\\safirma\\Documents\\GitHub\\printabilty\\frontend\\node_modules\\@stripe\\stripe-react-native\\lib\\module\\types\\components\\CardFieldInput.ts"],"sourcesContent":["import type { NativeSyntheticEvent, StyleProp, ViewStyle } from 'react-native';\nimport type { CardBrand } from '../Token';\n\nexport type FieldName = 'CardNumber' | 'Cvc' | 'ExpiryDate' | 'PostalCode';\n\nexport enum ValidationState {\n  Valid = 'Valid',\n  Invalid = 'Invalid',\n  Incomplete = 'Incomplete',\n  Unknown = 'Unknown',\n}\n\nexport interface Details {\n  last4: string;\n  expiryMonth: number;\n  expiryYear: number;\n  postalCode?: string;\n  brand: CardBrand;\n  complete: boolean;\n  validExpiryDate: ValidationState;\n  validCVC: ValidationState;\n  validNumber: ValidationState;\n  /**\n   * WARNING: Full card details are only returned when the `dangerouslyGetFullCardDetails` prop\n   * on the `CardField` component is set to `true`.\n   * Only do this if you're certain that you fulfill the necessary PCI compliance requirements.\n   * Make sure that you're not mistakenly logging or storing full card details!\n   * See the docs for details: https://stripe.com/docs/security/guide#validating-pci-compliance\n   */\n  number?: string;\n  cvc?: string;\n}\n\nexport interface Styles {\n  borderWidth?: number;\n  backgroundColor?: string;\n  borderColor?: string;\n  borderRadius?: number;\n  textColor?: string;\n  fontSize?: number;\n  placeholderColor?: string;\n  cursorColor?: string;\n  textErrorColor?: string;\n  fontFamily?: string;\n}\n\nexport interface Placeholders {\n  number?: string;\n  expiration?: string;\n  cvc?: string;\n  postalCode?: string;\n}\n\n/**\n * @ignore\n */\nexport interface NativeProps {\n  style?: StyleProp<ViewStyle>;\n  value?: Partial<Details>;\n  postalCodeEnabled?: boolean;\n  autofocus?: boolean;\n  countryCode: string | null;\n  onCardChange(event: NativeSyntheticEvent<Details>): void;\n  onFocusChange(\n    event: NativeSyntheticEvent<{ focusedField: FieldName | null }>\n  ): void;\n  cardStyle?: Styles;\n  placeholders?: Placeholders;\n  disabled?: boolean;\n}\n\nexport interface Methods {\n  focus(): void;\n  blur(): void;\n  clear(): void;\n}\n"],"mappings":";;;;IAKYA,eAAe;AAAAC,OAAA,CAAAD,eAAA,GAAAA,eAAA;AAAA,WAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;AAAA,GAAfA,eAAe,KAAAC,OAAA,CAAAD,eAAA,GAAfA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}