{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddressSheet = AddressSheet;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _jsxFileName = \"/Users/charliecruzan/stripe/stripe-react-native/src/components/AddressSheet.tsx\";\nvar _excluded = [\"onSubmit\", \"onError\"];\nvar AddressSheetNative = (0, _reactNative.requireNativeComponent)('AddressSheetView');\nfunction AddressSheet(_ref) {\n  var onSubmit = _ref.onSubmit,\n    onError = _ref.onError,\n    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  return _react.default.createElement(AddressSheetNative, (0, _extends2.default)({}, props, {\n    onSubmitAction: function onSubmitAction(value) {\n      return onSubmit(value.nativeEvent);\n    },\n    onErrorAction: function onErrorAction(value) {\n      return onError(value.nativeEvent.error);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_jsxFileName","_excluded","AddressSheetNative","requireNativeComponent","AddressSheet","_ref","onSubmit","onError","props","_objectWithoutProperties2","default","createElement","_extends2","onSubmitAction","value","nativeEvent","onErrorAction","error","__self","__source","fileName","lineNumber","columnNumber"],"sources":["C:\\Users\\safirma\\Documents\\GitHub\\printabilty\\frontend\\node_modules\\@stripe\\stripe-react-native\\lib\\module\\components\\AddressSheet.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  AccessibilityProps,\n  requireNativeComponent,\n  NativeSyntheticEvent,\n} from 'react-native';\nimport type {\n  PaymentSheet,\n  AddressDetails,\n  StripeError,\n  AddressSheetError,\n} from '../types';\n\nconst AddressSheetNative = requireNativeComponent<any>('AddressSheetView');\n\n/**\n *  Props\n */\nexport interface Props extends AccessibilityProps {\n  /** Whether the sheet is visible. Defaults to false. */\n  visible: boolean;\n  /** Controls how the modal is presented (after animation). iOS only. Defaults to `popover`. See https://developer.apple.com/documentation/uikit/uimodalpresentationstyle for more info. */\n  presentationStyle?:\n    | 'fullscreen'\n    | 'popover'\n    | 'pageSheet'\n    | 'formSheet'\n    | 'automatic'\n    | 'overFullScreen';\n  /** Controls how the modal animates. iOS only. */\n  animationStyle?: 'flip' | 'curl' | 'slide' | 'dissolve';\n  /** Configuration for the look and feel of the UI. */\n  appearance?: PaymentSheet.AppearanceParams;\n  /** The values to prepopulate the sheet's fields with. */\n  defaultValues?: AddressDetails;\n  /** Configuration for additional fields besides the physical address */\n  additionalFields?: {\n    /** Determines whether the phone number is hidden, required, or optional. Defaults to hidden. */\n    phoneNumber?: 'hidden' | 'optional' | 'required';\n    /** The label of a checkbox displayed below other fields. If null or undefined, the checkbox is not displayed. */\n    checkboxLabel?: string;\n  };\n  /** A list of two-letter country codes representing countries the customers can select. If the list is empty (the default), we display all countries. */\n  allowedCountries?: Array<string>;\n  /** A list of two-letter country codes representing countries that support address autocomplete. Defaults to a list of countries that Stripe has audited to ensure a good autocomplete experience. */\n  autocompleteCountries?: Array<string>;\n  /** The title of the primary button displayed at the bottom of the screen. Defaults to \"Save Address\". */\n  primaryButtonTitle?: string;\n  /** Title displayed at the top of the sheet. Defaults to \"Address\". */\n  sheetTitle?: string;\n  /** Android only. Google Places api key used to provide autocomplete suggestions. When null, autocomplete is disabled on Android. */\n  googlePlacesApiKey?: string;\n  /** Called when the user submits their information */\n  onSubmit: (result: CollectAddressResult) => void;\n  /** Called when the user taps the button to close the sheet before submitting their information, or when an error occurs. */\n  onError: (error: StripeError<AddressSheetError>) => void;\n}\n\nexport type CollectAddressResult = Required<AddressDetails>;\n\n/**\n *\n *\n * @example\n * ```ts\n *  <AddressSheet\n *\n *  />\n * ```\n * @param __namedParameters Props\n * @returns JSX.Element\n * @category ReactComponents\n */\nexport function AddressSheet({ onSubmit, onError, ...props }: Props) {\n  return (\n    <AddressSheetNative\n      {...props}\n      onSubmitAction={(value: NativeSyntheticEvent<CollectAddressResult>) =>\n        onSubmit(value.nativeEvent)\n      }\n      onErrorAction={(\n        value: NativeSyntheticEvent<{\n          error: StripeError<AddressSheetError>;\n        }>\n      ) => onError(value.nativeEvent.error)}\n    />\n  );\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAIsB,IAAAE,YAAA;AAAA,IAAAC,SAAA;AAQtB,IAAMC,kBAAkB,GAAG,IAAAH,YAAA,CAAAI,sBAAsB,EAAM,kBAAkB,CAAC;AA4DnE,SAASC,YAAYA,CAAAC,IAAA,EAAyC;EAAA,IAAtCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAKC,KAAK,OAAAC,yBAAA,CAAAC,OAAA,EAAAL,IAAA,EAAAJ,SAAA;EACxD,OACEL,MAAA,CAAAc,OAAA,CAAAC,aAAA,CAACT,kBAAkB,MAAAU,SAAA,CAAAF,OAAA,MACbF,KAAK;IACTK,cAAc,EAAE,SAAAA,eAACC,KAAiD;MAAA,OAChER,QAAQ,CAACQ,KAAK,CAACC,WAAW,CAAC;IAAA,CAC5B;IACDC,aAAa,EAAE,SAAAA,cACbF,KAEE;MAAA,OACCP,OAAO,CAACO,KAAK,CAACC,WAAW,CAACE,KAAK,CAAC;IAAA,CAAC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAApB,YAAA;MAAAqB,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtC;AAEN","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}