{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlatformPayButton = PlatformPayButton;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _NativeStripeSdk = _interopRequireDefault(require(\"../NativeStripeSdk\"));\nvar _PlatformPay = require(\"../types/PlatformPay\");\nvar _GooglePayButtonNative = _interopRequireDefault(require(\"./GooglePayButtonNative\"));\nvar _ApplePayButtonNative = _interopRequireDefault(require(\"./ApplePayButtonNative\"));\nvar _jsxFileName = \"/Users/charliecruzan/stripe/stripe-react-native/src/components/PlatformPayButton.tsx\";\nvar _excluded = [\"type\", \"appearance\", \"onPress\", \"disabled\", \"borderRadius\", \"onShippingMethodSelected\", \"onShippingContactSelected\", \"onCouponCodeEntered\", \"setOrderTracking\", \"style\"];\nfunction PlatformPayButton(_ref) {\n  var _ref$type = _ref.type,\n    type = _ref$type === void 0 ? _PlatformPay.ButtonType.Default : _ref$type,\n    _ref$appearance = _ref.appearance,\n    appearance = _ref$appearance === void 0 ? _PlatformPay.ButtonStyle.Automatic : _ref$appearance,\n    onPress = _ref.onPress,\n    disabled = _ref.disabled,\n    borderRadius = _ref.borderRadius,\n    onShippingMethodSelected = _ref.onShippingMethodSelected,\n    onShippingContactSelected = _ref.onShippingContactSelected,\n    onCouponCodeEntered = _ref.onCouponCodeEntered,\n    setOrderTracking = _ref.setOrderTracking,\n    style = _ref.style,\n    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var shippingMethodCallback = onShippingMethodSelected ? function (value) {\n    onShippingMethodSelected && onShippingMethodSelected(value.nativeEvent);\n  } : undefined;\n  var shippingContactCallback = onShippingContactSelected ? function (value) {\n    onShippingContactSelected(value.nativeEvent);\n  } : undefined;\n  var couponCodeCallback = onCouponCodeEntered ? function (value) {\n    onCouponCodeEntered && onCouponCodeEntered(value.nativeEvent);\n  } : undefined;\n  var orderTrackingCallback = setOrderTracking ? function () {\n    setOrderTracking(_NativeStripeSdk.default.configureOrderTracking);\n  } : undefined;\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    disabled: disabled,\n    activeOpacity: disabled ? 0.3 : 1,\n    onPress: onPress,\n    style: [disabled ? styles.disabled : styles.notDisabled, style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, _reactNative.Platform.OS === 'ios' ? _react.default.createElement(_ApplePayButtonNative.default, (0, _extends2.default)({\n    type: type,\n    buttonStyle: appearance,\n    borderRadius: borderRadius,\n    disabled: disabled,\n    onShippingMethodSelectedAction: shippingMethodCallback,\n    onShippingContactSelectedAction: shippingContactCallback,\n    onCouponCodeEnteredAction: couponCodeCallback,\n    onOrderTrackingAction: orderTrackingCallback,\n    style: styles.nativeButtonStyle\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })) : _react.default.createElement(_GooglePayButtonNative.default, (0, _extends2.default)({\n    type: type,\n    appearance: appearance,\n    borderRadius: borderRadius,\n    style: styles.nativeButtonStyle\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = _reactNative.StyleSheet.create({\n  disabled: {\n    flex: 0,\n    opacity: 0.4\n  },\n  notDisabled: {\n    flex: 0\n  },\n  nativeButtonStyle: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_NativeStripeSdk","_PlatformPay","_GooglePayButtonNative","_ApplePayButtonNative","_jsxFileName","_excluded","PlatformPayButton","_ref","_ref$type","type","ButtonType","Default","_ref$appearance","appearance","ButtonStyle","Automatic","onPress","disabled","borderRadius","onShippingMethodSelected","onShippingContactSelected","onCouponCodeEntered","setOrderTracking","style","props","_objectWithoutProperties2","default","shippingMethodCallback","value","nativeEvent","undefined","shippingContactCallback","couponCodeCallback","orderTrackingCallback","configureOrderTracking","createElement","TouchableOpacity","activeOpacity","styles","notDisabled","__self","__source","fileName","lineNumber","columnNumber","Platform","OS","_extends2","buttonStyle","onShippingMethodSelectedAction","onShippingContactSelectedAction","onCouponCodeEnteredAction","onOrderTrackingAction","nativeButtonStyle","StyleSheet","create","flex","opacity"],"sources":["C:\\Users\\safirma\\Documents\\GitHub\\printabilty\\frontend\\node_modules\\@stripe\\stripe-react-native\\lib\\module\\components\\PlatformPayButton.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  AccessibilityProps,\n  StyleProp,\n  ViewStyle,\n  TouchableOpacity,\n  StyleSheet,\n  Platform,\n  NativeSyntheticEvent,\n} from 'react-native';\nimport NativeStripeSdk from '../NativeStripeSdk';\nimport {\n  ButtonType,\n  ButtonStyle,\n  ShippingMethod,\n  ShippingContact,\n} from '../types/PlatformPay';\nimport GooglePayButtonNative from './GooglePayButtonNative';\nimport ApplePayButtonNative from './ApplePayButtonNative';\n\n/**\n *  PlatformPayButton Component Props\n */\nexport interface Props extends AccessibilityProps {\n  /** Sets the text displayed by the button. */\n  type?: ButtonType;\n  /** Sets the coloring of the button. */\n  appearance?: ButtonStyle;\n  /** Sets the border radius of the button. */\n  borderRadius?: number;\n  /** Function called whenever the button is pressed. */\n  onPress(): void;\n  /** Set to `true` to disable the button from being pressed & apply a slight opacity to indicate that it is unpressable. Defaults to false. */\n  disabled?: boolean;\n  /**\n   * This callback is triggered whenever the user selects a shipping method in the Apple Pay sheet.\n   * It receives one parameter: an `event` object with a `shippingMethod` field. You MUST\n   * update the Apple Pay sheet in your callback using the updatePlatformPaySheet function, otherwise the\n   * Apple Pay sheet will hang and the payment flow will automatically cancel.\n   */\n  onShippingMethodSelected?: (event: {\n    shippingMethod: ShippingMethod;\n  }) => void;\n  /**\n   * This callback is triggered whenever the user selects a shipping contact in the Apple Pay sheet IF\n   * ContactField.PostalAddress was included in the requiredShippingAddressFields array.\n   * It receives one parameter: an `event` object with a `shippingContact` field. You MUST\n   * update the Apple Pay sheet in your callback using the updatePlatformPaySheet function, otherwise the\n   * Apple Pay sheet will hang and the payment flow will automatically cancel.\n   */\n  onShippingContactSelected?: (event: {\n    shippingContact: ShippingContact;\n  }) => void;\n  /**\n   * This callback is triggered whenever the user inputs a coupon code in the Apple Pay sheet.\n   * It receives one parameter: an `event` object with a `couponCode` field. You MUST\n   * update the Apple Pay sheet in your callback using the updatePlatformPaySheet function, otherwise the\n   * Apple Pay sheet will hang and the payment flow will automatically cancel.\n   */\n  onCouponCodeEntered?: (event: { couponCode: string }) => void;\n  /** Callback function for setting the order details (retrieved from your server) to give users the\n   * ability to track and manage their purchases in Wallet. Stripe calls your implementation after the\n   * payment is complete, but before iOS dismisses the Apple Pay sheet. You must call the `completion`\n   * function, or else the Apple Pay sheet will hang.*/\n  setOrderTracking?: (\n    completion: (\n      orderIdentifier: string,\n      orderTypeIdentifier: string,\n      authenticationToken: string,\n      webServiceUrl: string\n    ) => void\n  ) => void;\n  testID?: string;\n  style?: StyleProp<ViewStyle>;\n}\n\n/**\n *  PlatformPayButton Component. Display the platform-specific native wallet pay button: Apple Pay on iOS, and Google Pay on Android.\n *\n * @example\n * ```ts\n *  <PlatformPayButton\n *    onPress={pay}\n *    type={PlatformPay.ButtonType.Subscribe}\n *    appearance={PlatformPay.ButtonStyle.WhiteOutline}\n *    borderRadius={4}\n *    disabled={!isApplePaySupported}\n *    style={styles.payButton}\n *  />\n * ```\n * @param __namedParameters Props\n * @returns JSX.Element\n * @category ReactComponents\n */\nexport function PlatformPayButton({\n  type = ButtonType.Default,\n  appearance = ButtonStyle.Automatic,\n  onPress,\n  disabled,\n  borderRadius,\n  onShippingMethodSelected,\n  onShippingContactSelected,\n  onCouponCodeEntered,\n  setOrderTracking,\n  style,\n  ...props\n}: Props) {\n  const shippingMethodCallback = onShippingMethodSelected\n    ? (\n        value: NativeSyntheticEvent<{\n          shippingMethod: ShippingMethod;\n        }>\n      ) => {\n        onShippingMethodSelected && onShippingMethodSelected(value.nativeEvent);\n      }\n    : undefined;\n\n  const shippingContactCallback = onShippingContactSelected\n    ? (\n        value: NativeSyntheticEvent<{\n          shippingContact: ShippingContact;\n        }>\n      ) => {\n        onShippingContactSelected(value.nativeEvent);\n      }\n    : undefined;\n\n  const couponCodeCallback = onCouponCodeEntered\n    ? (\n        value: NativeSyntheticEvent<{\n          couponCode: string;\n        }>\n      ) => {\n        onCouponCodeEntered && onCouponCodeEntered(value.nativeEvent);\n      }\n    : undefined;\n\n  const orderTrackingCallback = setOrderTracking\n    ? () => {\n        setOrderTracking(NativeStripeSdk.configureOrderTracking);\n      }\n    : undefined;\n\n  return (\n    <TouchableOpacity\n      disabled={disabled}\n      activeOpacity={disabled ? 0.3 : 1}\n      onPress={onPress}\n      style={[disabled ? styles.disabled : styles.notDisabled, style]}\n    >\n      {Platform.OS === 'ios' ? (\n        <ApplePayButtonNative\n          type={type}\n          buttonStyle={appearance}\n          borderRadius={borderRadius}\n          disabled={disabled}\n          onShippingMethodSelectedAction={shippingMethodCallback}\n          onShippingContactSelectedAction={shippingContactCallback}\n          onCouponCodeEnteredAction={couponCodeCallback}\n          onOrderTrackingAction={orderTrackingCallback}\n          style={styles.nativeButtonStyle}\n          {...props}\n        />\n      ) : (\n        <GooglePayButtonNative\n          type={type}\n          appearance={appearance}\n          borderRadius={borderRadius}\n          style={styles.nativeButtonStyle}\n          {...props}\n        />\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  disabled: {\n    flex: 0,\n    opacity: 0.4,\n  },\n  notDisabled: {\n    flex: 0,\n  },\n  nativeButtonStyle: { flex: 1 },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}